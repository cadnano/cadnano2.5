# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mainwindow/mainwindow.ui'
#
# Created by: PyQt5 UI code generator 5.10.dev1801191340
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1255, 873)
        MainWindow.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        MainWindow.setStatusTip("")
        MainWindow.setStyleSheet("QMainWindow::separator {background: #cccccc; width: 1px; height: 1px;}")
        MainWindow.setIconSize(QtCore.QSize(32, 32))
        MainWindow.setTabShape(QtWidgets.QTabWidget.Rounded)
        MainWindow.setDockNestingEnabled(True)
        MainWindow.setDockOptions(QtWidgets.QMainWindow.AllowNestedDocks|QtWidgets.QMainWindow.AllowTabbedDocks|QtWidgets.QMainWindow.AnimatedDocks)
        MainWindow.setUnifiedTitleAndToolBarOnMac(True)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setAutoFillBackground(False)
        self.centralwidget.setObjectName("centralwidget")
        MainWindow.setCentralWidget(self.centralwidget)
        self.main_toolbar = QtWidgets.QToolBar(MainWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.main_toolbar.sizePolicy().hasHeightForWidth())
        self.main_toolbar.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setPointSize(8)
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.main_toolbar.setFont(font)
        self.main_toolbar.setMovable(False)
        self.main_toolbar.setIconSize(QtCore.QSize(20, 20))
        self.main_toolbar.setToolButtonStyle(QtCore.Qt.ToolButtonTextUnderIcon)
        self.main_toolbar.setObjectName("main_toolbar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.main_toolbar)
        self.filter_view_toolbar = QtWidgets.QToolBar(MainWindow)
        self.filter_view_toolbar.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.filter_view_toolbar.setMovable(True)
        self.filter_view_toolbar.setAllowedAreas(QtCore.Qt.LeftToolBarArea|QtCore.Qt.RightToolBarArea|QtCore.Qt.TopToolBarArea)
        self.filter_view_toolbar.setIconSize(QtCore.QSize(20, 20))
        self.filter_view_toolbar.setToolButtonStyle(QtCore.Qt.ToolButtonIconOnly)
        self.filter_view_toolbar.setFloatable(False)
        self.filter_view_toolbar.setObjectName("filter_view_toolbar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.filter_view_toolbar)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1255, 22))
        self.menubar.setObjectName("menubar")
        self.menu_file = QtWidgets.QMenu(self.menubar)
        self.menu_file.setObjectName("menu_file")
        self.menu_edit = QtWidgets.QMenu(self.menubar)
        self.menu_edit.setObjectName("menu_edit")
        self.menuView = QtWidgets.QMenu(self.menubar)
        self.menuView.setObjectName("menuView")
        MainWindow.setMenuBar(self.menubar)
        self.slice_dock_widget = QtWidgets.QDockWidget(MainWindow)
        self.slice_dock_widget.setMinimumSize(QtCore.QSize(200, 200))
        self.slice_dock_widget.setObjectName("slice_dock_widget")
        self.slice_dock_widget_contents = QtWidgets.QWidget()
        self.slice_dock_widget_contents.setObjectName("slice_dock_widget_contents")
        self.slice_horizontal_layout = QtWidgets.QHBoxLayout(self.slice_dock_widget_contents)
        self.slice_horizontal_layout.setContentsMargins(1, 1, 1, 1)
        self.slice_horizontal_layout.setSpacing(1)
        self.slice_horizontal_layout.setObjectName("slice_horizontal_layout")
        self.slice_graphics_view = CustomQGraphicsView(self.slice_dock_widget_contents)
        self.slice_graphics_view.setMinimumSize(QtCore.QSize(0, 0))
        self.slice_graphics_view.setBaseSize(QtCore.QSize(400, 0))
        self.slice_graphics_view.setMouseTracking(True)
        self.slice_graphics_view.setFocusPolicy(QtCore.Qt.WheelFocus)
        self.slice_graphics_view.setStyleSheet("QGraphicsView { background-color: #f6f6f6; }")
        self.slice_graphics_view.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.slice_graphics_view.setFrameShadow(QtWidgets.QFrame.Plain)
        self.slice_graphics_view.setLineWidth(0)
        self.slice_graphics_view.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.slice_graphics_view.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.slice_graphics_view.setRenderHints(QtGui.QPainter.Antialiasing|QtGui.QPainter.HighQualityAntialiasing|QtGui.QPainter.TextAntialiasing)
        self.slice_graphics_view.setDragMode(QtWidgets.QGraphicsView.NoDrag)
        self.slice_graphics_view.setTransformationAnchor(QtWidgets.QGraphicsView.AnchorUnderMouse)
        self.slice_graphics_view.setResizeAnchor(QtWidgets.QGraphicsView.AnchorUnderMouse)
        self.slice_graphics_view.setObjectName("slice_graphics_view")
        self.slice_horizontal_layout.addWidget(self.slice_graphics_view)
        self.slice_dock_widget.setWidget(self.slice_dock_widget_contents)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(1), self.slice_dock_widget)
        self.grid_dock_widget = QtWidgets.QDockWidget(MainWindow)
        self.grid_dock_widget.setMinimumSize(QtCore.QSize(400, 200))
        self.grid_dock_widget.setStyleSheet("background-color: #f6f6f6;")
        self.grid_dock_widget.setFeatures(QtWidgets.QDockWidget.AllDockWidgetFeatures)
        self.grid_dock_widget.setObjectName("grid_dock_widget")
        self.grid_dock_widget_contents = QtWidgets.QWidget()
        self.grid_dock_widget_contents.setObjectName("grid_dock_widget_contents")
        self.grid_horizontal_layout = QtWidgets.QHBoxLayout(self.grid_dock_widget_contents)
        self.grid_horizontal_layout.setContentsMargins(0, 0, 0, 0)
        self.grid_horizontal_layout.setSpacing(1)
        self.grid_horizontal_layout.setObjectName("grid_horizontal_layout")
        self.grid_graphics_view = CustomQGraphicsView(self.grid_dock_widget_contents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.grid_graphics_view.sizePolicy().hasHeightForWidth())
        self.grid_graphics_view.setSizePolicy(sizePolicy)
        self.grid_graphics_view.setMinimumSize(QtCore.QSize(0, 0))
        self.grid_graphics_view.setBaseSize(QtCore.QSize(480, 0))
        self.grid_graphics_view.setMouseTracking(True)
        self.grid_graphics_view.setFocusPolicy(QtCore.Qt.WheelFocus)
        self.grid_graphics_view.setStyleSheet("QGraphicsView { background-color: #f6f6f6; }")
        self.grid_graphics_view.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.grid_graphics_view.setFrameShadow(QtWidgets.QFrame.Plain)
        self.grid_graphics_view.setLineWidth(0)
        self.grid_graphics_view.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.grid_graphics_view.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.grid_graphics_view.setRenderHints(QtGui.QPainter.Antialiasing|QtGui.QPainter.HighQualityAntialiasing|QtGui.QPainter.TextAntialiasing)
        self.grid_graphics_view.setDragMode(QtWidgets.QGraphicsView.NoDrag)
        self.grid_graphics_view.setTransformationAnchor(QtWidgets.QGraphicsView.AnchorUnderMouse)
        self.grid_graphics_view.setResizeAnchor(QtWidgets.QGraphicsView.AnchorUnderMouse)
        self.grid_graphics_view.setObjectName("grid_graphics_view")
        self.grid_horizontal_layout.addWidget(self.grid_graphics_view)
        self.grid_dock_widget.setWidget(self.grid_dock_widget_contents)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(1), self.grid_dock_widget)
        self.path_dock_widget = QtWidgets.QDockWidget(MainWindow)
        self.path_dock_widget.setMinimumSize(QtCore.QSize(200, 200))
        self.path_dock_widget.setStyleSheet("background-color: #f6f6f6;")
        self.path_dock_widget.setObjectName("path_dock_widget")
        self.path_dock_widget_contents = QtWidgets.QWidget()
        self.path_dock_widget_contents.setObjectName("path_dock_widget_contents")
        self.path_horizontal_layout = QtWidgets.QHBoxLayout(self.path_dock_widget_contents)
        self.path_horizontal_layout.setContentsMargins(1, 1, 1, 1)
        self.path_horizontal_layout.setSpacing(1)
        self.path_horizontal_layout.setObjectName("path_horizontal_layout")
        self.path_graphics_view = CustomQGraphicsView(self.path_dock_widget_contents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.path_graphics_view.sizePolicy().hasHeightForWidth())
        self.path_graphics_view.setSizePolicy(sizePolicy)
        self.path_graphics_view.setMinimumSize(QtCore.QSize(0, 0))
        self.path_graphics_view.setMouseTracking(True)
        self.path_graphics_view.setFocusPolicy(QtCore.Qt.WheelFocus)
        self.path_graphics_view.setStyleSheet("QGraphicsView { background-color: #f6f6f6; }")
        self.path_graphics_view.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.path_graphics_view.setFrameShadow(QtWidgets.QFrame.Plain)
        self.path_graphics_view.setLineWidth(0)
        self.path_graphics_view.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.path_graphics_view.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.path_graphics_view.setRenderHints(QtGui.QPainter.Antialiasing|QtGui.QPainter.HighQualityAntialiasing|QtGui.QPainter.TextAntialiasing)
        self.path_graphics_view.setTransformationAnchor(QtWidgets.QGraphicsView.AnchorUnderMouse)
        self.path_graphics_view.setObjectName("path_graphics_view")
        self.path_horizontal_layout.addWidget(self.path_graphics_view)
        self.path_dock_widget.setWidget(self.path_dock_widget_contents)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(2), self.path_dock_widget)
        self.inspector_dock_widget = QtWidgets.QDockWidget(MainWindow)
        self.inspector_dock_widget.setMaximumSize(QtCore.QSize(400, 524287))
        self.inspector_dock_widget.setStyleSheet("background-color: #f6f6f6;")
        self.inspector_dock_widget.setObjectName("inspector_dock_widget")
        self.inspector_dock_widget_contents = QtWidgets.QWidget()
        self.inspector_dock_widget_contents.setObjectName("inspector_dock_widget_contents")
        self.inspector_vertical_layout = QtWidgets.QVBoxLayout(self.inspector_dock_widget_contents)
        self.inspector_vertical_layout.setContentsMargins(0, 0, 0, 0)
        self.inspector_vertical_layout.setSpacing(1)
        self.inspector_vertical_layout.setObjectName("inspector_vertical_layout")
        self.outliner_property_splitter = QtWidgets.QSplitter(self.inspector_dock_widget_contents)
        self.outliner_property_splitter.setOrientation(QtCore.Qt.Vertical)
        self.outliner_property_splitter.setHandleWidth(0)
        self.outliner_property_splitter.setObjectName("outliner_property_splitter")
        self.outliner_widget = OutlinerTreeWidget(self.outliner_property_splitter)
        self.outliner_widget.setMinimumSize(QtCore.QSize(290, 0))
        self.outliner_widget.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.outliner_widget.setStyleSheet("OutlinerTreeWidget { background-color: #f6f6f6; }\n"
"\n"
"")
        self.outliner_widget.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.outliner_widget.setEditTriggers(QtWidgets.QAbstractItemView.EditKeyPressed|QtWidgets.QAbstractItemView.SelectedClicked)
        self.outliner_widget.setDragEnabled(True)
        self.outliner_widget.setObjectName("outliner_widget")
        self.outliner_widget.headerItem().setText(0, "1")
        self.property_widget = PropertyEditorWidget(self.outliner_property_splitter)
        font = QtGui.QFont()
        font.setStyleStrategy(QtGui.QFont.PreferAntialias)
        self.property_widget.setFont(font)
        self.property_widget.setFocusPolicy(QtCore.Qt.StrongFocus)
        self.property_widget.setStyleSheet("QTreeView {alternate-background-color:#f0f0f0;}")
        self.property_widget.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.property_widget.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustToContents)
        self.property_widget.setEditTriggers(QtWidgets.QAbstractItemView.DoubleClicked|QtWidgets.QAbstractItemView.EditKeyPressed|QtWidgets.QAbstractItemView.SelectedClicked)
        self.property_widget.setAlternatingRowColors(True)
        self.property_widget.setUniformRowHeights(True)
        self.property_widget.setColumnCount(2)
        self.property_widget.setObjectName("property_widget")
        self.property_widget.headerItem().setText(0, "1")
        self.property_widget.headerItem().setText(1, "2")
        self.property_buttonbox = QtWidgets.QDialogButtonBox(self.outliner_property_splitter)
        self.property_buttonbox.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.property_buttonbox.setStandardButtons(QtWidgets.QDialogButtonBox.Apply|QtWidgets.QDialogButtonBox.Cancel)
        self.property_buttonbox.setCenterButtons(True)
        self.property_buttonbox.setObjectName("property_buttonbox")
        self.inspector_vertical_layout.addWidget(self.outliner_property_splitter)
        self.inspector_dock_widget.setWidget(self.inspector_dock_widget_contents)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(2), self.inspector_dock_widget)
        self.action_new = QtWidgets.QAction(MainWindow)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/filetools/new"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_new.setIcon(icon)
        self.action_new.setObjectName("action_new")
        self.action_open = QtWidgets.QAction(MainWindow)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/filetools/open"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_open.setIcon(icon1)
        self.action_open.setObjectName("action_open")
        self.action_close = QtWidgets.QAction(MainWindow)
        self.action_close.setObjectName("action_close")
        self.action_save = QtWidgets.QAction(MainWindow)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/filetools/save"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_save.setIcon(icon2)
        self.action_save.setObjectName("action_save")
        self.action_save_as = QtWidgets.QAction(MainWindow)
        self.action_save_as.setIcon(icon2)
        self.action_save_as.setObjectName("action_save_as")
        self.action_save_a_copy = QtWidgets.QAction(MainWindow)
        self.action_save_a_copy.setObjectName("action_save_a_copy")
        self.action_print = QtWidgets.QAction(MainWindow)
        self.action_print.setObjectName("action_print")
        self.action_SVG = QtWidgets.QAction(MainWindow)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/filetools/svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_SVG.setIcon(icon3)
        self.action_SVG.setObjectName("action_SVG")
        self.action_X3D = QtWidgets.QAction(MainWindow)
        self.action_X3D.setObjectName("action_X3D")
        self.action_cut = QtWidgets.QAction(MainWindow)
        self.action_cut.setObjectName("action_cut")
        self.action_copy = QtWidgets.QAction(MainWindow)
        self.action_copy.setObjectName("action_copy")
        self.action_paste = QtWidgets.QAction(MainWindow)
        self.action_paste.setObjectName("action_paste")
        self.action_select_all = QtWidgets.QAction(MainWindow)
        self.action_select_all.setObjectName("action_select_all")
        self.action_new_honeycomb_part = QtWidgets.QAction(MainWindow)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/parttools/new-honeycomb"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_new_honeycomb_part.setIcon(icon4)
        self.action_new_honeycomb_part.setObjectName("action_new_honeycomb_part")
        self.action_new_dna_part = QtWidgets.QAction(MainWindow)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/parttools/new-square"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_new_dna_part.setIcon(icon5)
        self.action_new_dna_part.setObjectName("action_new_dna_part")
        self.action_path_break = QtWidgets.QAction(MainWindow)
        self.action_path_break.setCheckable(True)
        self.action_path_break.setChecked(False)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/pathtools/break"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_path_break.setIcon(icon6)
        self.action_path_break.setObjectName("action_path_break")
        self.action_path_select = QtWidgets.QAction(MainWindow)
        self.action_path_select.setCheckable(True)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/pathtools/select"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_path_select.setIcon(icon7)
        self.action_path_select.setObjectName("action_path_select")
        self.action_path_create = QtWidgets.QAction(MainWindow)
        self.action_path_create.setCheckable(True)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(":/pathtools/force"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_path_create.setIcon(icon8)
        self.action_path_create.setObjectName("action_path_create")
        self.action_path_insertion = QtWidgets.QAction(MainWindow)
        self.action_path_insertion.setCheckable(True)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap(":/pathtools/insert"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_path_insertion.setIcon(icon9)
        self.action_path_insertion.setObjectName("action_path_insertion")
        self.action_new_square_part = QtWidgets.QAction(MainWindow)
        self.action_new_square_part.setIcon(icon5)
        self.action_new_square_part.setObjectName("action_new_square_part")
        self.action_path_skip = QtWidgets.QAction(MainWindow)
        self.action_path_skip.setCheckable(True)
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap(":/pathtools/skip"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_path_skip.setIcon(icon10)
        self.action_path_skip.setObjectName("action_path_skip")
        self.action_path_paint = QtWidgets.QAction(MainWindow)
        self.action_path_paint.setCheckable(True)
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap(":/pathtools/paint"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_path_paint.setIcon(icon11)
        self.action_path_paint.setObjectName("action_path_paint")
        self.action_path_add_seq = QtWidgets.QAction(MainWindow)
        self.action_path_add_seq.setCheckable(True)
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap(":/pathtools/addseq"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_path_add_seq.setIcon(icon12)
        self.action_path_add_seq.setObjectName("action_path_add_seq")
        self.action_export_staples = QtWidgets.QAction(MainWindow)
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap(":/filetools/export"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_export_staples.setIcon(icon13)
        self.action_export_staples.setObjectName("action_export_staples")
        self.action_preferences = QtWidgets.QAction(MainWindow)
        self.action_preferences.setObjectName("action_preferences")
        self.action_cadnano_website = QtWidgets.QAction(MainWindow)
        self.action_cadnano_website.setObjectName("action_cadnano_website")
        self.action_feedback = QtWidgets.QAction(MainWindow)
        self.action_feedback.setObjectName("action_feedback")
        self.action_filter_part = QtWidgets.QAction(MainWindow)
        self.action_filter_part.setCheckable(True)
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap(":/parttools/filter-part"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_filter_part.setIcon(icon14)
        self.action_filter_part.setObjectName("action_filter_part")
        self.action_filter_endpoint = QtWidgets.QAction(MainWindow)
        self.action_filter_endpoint.setCheckable(True)
        self.action_filter_endpoint.setChecked(True)
        icon15 = QtGui.QIcon()
        icon15.addPixmap(QtGui.QPixmap(":/parttools/filter-endpoint"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon15.addPixmap(QtGui.QPixmap(":/parttools/filter-endpoint-disabled"), QtGui.QIcon.Disabled, QtGui.QIcon.Off)
        self.action_filter_endpoint.setIcon(icon15)
        self.action_filter_endpoint.setObjectName("action_filter_endpoint")
        self.action_filter_xover = QtWidgets.QAction(MainWindow)
        self.action_filter_xover.setCheckable(True)
        self.action_filter_xover.setChecked(True)
        icon16 = QtGui.QIcon()
        icon16.addPixmap(QtGui.QPixmap(":/parttools/filter-xover"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon16.addPixmap(QtGui.QPixmap(":/parttools/filter-xover-disabled"), QtGui.QIcon.Disabled, QtGui.QIcon.Off)
        self.action_filter_xover.setIcon(icon16)
        self.action_filter_xover.setObjectName("action_filter_xover")
        self.action_views_label = QtWidgets.QAction(MainWindow)
        self.action_views_label.setEnabled(False)
        self.action_views_label.setObjectName("action_views_label")
        self.action_filter_strand = QtWidgets.QAction(MainWindow)
        self.action_filter_strand.setCheckable(True)
        icon17 = QtGui.QIcon()
        icon17.addPixmap(QtGui.QPixmap(":/parttools/filter-strand"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_filter_strand.setIcon(icon17)
        self.action_filter_strand.setObjectName("action_filter_strand")
        self.action_filter_helix = QtWidgets.QAction(MainWindow)
        self.action_filter_helix.setCheckable(True)
        self.action_filter_helix.setChecked(False)
        self.action_filter_helix.setEnabled(True)
        icon18 = QtGui.QIcon()
        icon18.addPixmap(QtGui.QPixmap(":/parttools/filter-handle"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon18.addPixmap(QtGui.QPixmap(":/parttools/filter-handle-alt"), QtGui.QIcon.Disabled, QtGui.QIcon.Off)
        self.action_filter_helix.setIcon(icon18)
        self.action_filter_helix.setObjectName("action_filter_helix")
        self.action_about = QtWidgets.QAction(MainWindow)
        self.action_about.setObjectName("action_about")
        self.action_path_mods = QtWidgets.QAction(MainWindow)
        self.action_path_mods.setCheckable(True)
        icon19 = QtGui.QIcon()
        icon19.addPixmap(QtGui.QPixmap(":/pathtools/mod"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_path_mods.setIcon(icon19)
        self.action_path_mods.setObjectName("action_path_mods")
        self.action_new_dnapart_honeycomb = QtWidgets.QAction(MainWindow)
        icon20 = QtGui.QIcon()
        icon20.addPixmap(QtGui.QPixmap(":/parttools/new-honeycomb-disabled"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon20.addPixmap(QtGui.QPixmap(":/parttools/new-honeycomb"), QtGui.QIcon.Disabled, QtGui.QIcon.Off)
        self.action_new_dnapart_honeycomb.setIcon(icon20)
        self.action_new_dnapart_honeycomb.setObjectName("action_new_dnapart_honeycomb")
        self.action_new_dnapart_square = QtWidgets.QAction(MainWindow)
        icon21 = QtGui.QIcon()
        icon21.addPixmap(QtGui.QPixmap(":/parttools/new-square-disabled"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon21.addPixmap(QtGui.QPixmap(":/parttools/new-square"), QtGui.QIcon.Disabled, QtGui.QIcon.Off)
        self.action_new_dnapart_square.setIcon(icon21)
        self.action_new_dnapart_square.setShortcut("")
        self.action_new_dnapart_square.setObjectName("action_new_dnapart_square")
        self.action_inspector = QtWidgets.QAction(MainWindow)
        self.action_inspector.setCheckable(True)
        self.action_inspector.setChecked(True)
        icon22 = QtGui.QIcon()
        icon22.addPixmap(QtGui.QPixmap(":/parttools/outliner"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_inspector.setIcon(icon22)
        self.action_inspector.setObjectName("action_inspector")
        self.action_new_part = QtWidgets.QAction(MainWindow)
        icon23 = QtGui.QIcon()
        icon23.addPixmap(QtGui.QPixmap(":/parttools/new-origami"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_new_part.setIcon(icon23)
        self.action_new_part.setObjectName("action_new_part")
        self.action_new_plasmidpart = QtWidgets.QAction(MainWindow)
        icon24 = QtGui.QIcon()
        icon24.addPixmap(QtGui.QPixmap(":/parttools/new-dna"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_new_plasmidpart.setIcon(icon24)
        self.action_new_plasmidpart.setObjectName("action_new_plasmidpart")
        self.action_filter_pre_axover = QtWidgets.QAction(MainWindow)
        self.action_filter_pre_axover.setCheckable(True)
        self.action_filter_pre_axover.setChecked(True)
        icon25 = QtGui.QIcon()
        icon25.addPixmap(QtGui.QPixmap(":/parttools/filter-pre-axover"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_filter_pre_axover.setIcon(icon25)
        self.action_filter_pre_axover.setObjectName("action_filter_pre_axover")
        self.action_filter_pre_pxover = QtWidgets.QAction(MainWindow)
        self.action_filter_pre_pxover.setCheckable(True)
        icon26 = QtGui.QIcon()
        icon26.addPixmap(QtGui.QPixmap(":/parttools/filter-pre-pxover"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_filter_pre_pxover.setIcon(icon26)
        self.action_filter_pre_pxover.setObjectName("action_filter_pre_pxover")
        self.action_vhelix_create = QtWidgets.QAction(MainWindow)
        self.action_vhelix_create.setCheckable(True)
        icon27 = QtGui.QIcon()
        icon27.addPixmap(QtGui.QPixmap(":/slicetools/create-helix"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_vhelix_create.setIcon(icon27)
        self.action_vhelix_create.setObjectName("action_vhelix_create")
        self.action_filter_fwd = QtWidgets.QAction(MainWindow)
        self.action_filter_fwd.setCheckable(True)
        self.action_filter_fwd.setChecked(True)
        icon28 = QtGui.QIcon()
        icon28.addPixmap(QtGui.QPixmap(":/parttools/filter-fwd"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_filter_fwd.setIcon(icon28)
        self.action_filter_fwd.setObjectName("action_filter_fwd")
        self.action_filter_rev = QtWidgets.QAction(MainWindow)
        self.action_filter_rev.setCheckable(True)
        self.action_filter_rev.setChecked(True)
        icon29 = QtGui.QIcon()
        icon29.addPixmap(QtGui.QPixmap(":/parttools/filter-rev"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_filter_rev.setIcon(icon29)
        self.action_filter_rev.setObjectName("action_filter_rev")
        self.action_vhelix_select = QtWidgets.QAction(MainWindow)
        self.action_vhelix_select.setCheckable(True)
        icon30 = QtGui.QIcon()
        icon30.addPixmap(QtGui.QPixmap(":/slicetools/select-helix"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_vhelix_select.setIcon(icon30)
        self.action_vhelix_select.setObjectName("action_vhelix_select")
        self.action_vhelix_snap = QtWidgets.QAction(MainWindow)
        self.action_vhelix_snap.setCheckable(True)
        self.action_vhelix_snap.setChecked(True)
        icon31 = QtGui.QIcon()
        icon31.addPixmap(QtGui.QPixmap(":/slicetools/snap-helix"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_vhelix_snap.setIcon(icon31)
        self.action_vhelix_snap.setObjectName("action_vhelix_snap")
        self.action_global_create = QtWidgets.QAction(MainWindow)
        self.action_global_create.setCheckable(True)
        icon32 = QtGui.QIcon()
        icon32.addPixmap(QtGui.QPixmap(":/pathtools/create"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        icon32.addPixmap(QtGui.QPixmap(":/pathtools/create-disabled"), QtGui.QIcon.Disabled, QtGui.QIcon.Off)
        self.action_global_create.setIcon(icon32)
        self.action_global_create.setObjectName("action_global_create")
        self.action_global_select = QtWidgets.QAction(MainWindow)
        self.action_global_select.setCheckable(True)
        self.action_global_select.setIcon(icon7)
        self.action_global_select.setObjectName("action_global_select")
        self.action_filters_label = QtWidgets.QAction(MainWindow)
        self.action_filters_label.setEnabled(False)
        self.action_filters_label.setObjectName("action_filters_label")
        self.action_toolbar_spacer_2 = QtWidgets.QAction(MainWindow)
        self.action_toolbar_spacer_2.setEnabled(False)
        self.action_toolbar_spacer_2.setText("")
        self.action_toolbar_spacer_2.setVisible(True)
        self.action_toolbar_spacer_2.setObjectName("action_toolbar_spacer_2")
        self.action_filter_scaf = QtWidgets.QAction(MainWindow)
        self.action_filter_scaf.setCheckable(True)
        self.action_filter_scaf.setChecked(True)
        icon33 = QtGui.QIcon()
        icon33.addPixmap(QtGui.QPixmap(":/parttools/filter-scaf"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_filter_scaf.setIcon(icon33)
        self.action_filter_scaf.setObjectName("action_filter_scaf")
        self.action_filter_stap = QtWidgets.QAction(MainWindow)
        self.action_filter_stap.setCheckable(True)
        self.action_filter_stap.setChecked(True)
        icon34 = QtGui.QIcon()
        icon34.addPixmap(QtGui.QPixmap(":/parttools/filter-stap"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_filter_stap.setIcon(icon34)
        self.action_filter_stap.setObjectName("action_filter_stap")
        self.action_toolbar_spacer_1 = QtWidgets.QAction(MainWindow)
        self.action_toolbar_spacer_1.setEnabled(False)
        self.action_toolbar_spacer_1.setText("")
        font = QtGui.QFont()
        font.setPointSize(10)
        self.action_toolbar_spacer_1.setFont(font)
        self.action_toolbar_spacer_1.setVisible(True)
        self.action_toolbar_spacer_1.setObjectName("action_toolbar_spacer_1")
        self.action_toolbar_spacer_21 = QtWidgets.QAction(MainWindow)
        self.action_toolbar_spacer_21.setEnabled(False)
        self.action_toolbar_spacer_21.setText("")
        font = QtGui.QFont()
        font.setPointSize(10)
        self.action_toolbar_spacer_21.setFont(font)
        self.action_toolbar_spacer_21.setVisible(True)
        self.action_toolbar_spacer_21.setObjectName("action_toolbar_spacer_21")
        self.action_slice = QtWidgets.QAction(MainWindow)
        self.action_slice.setCheckable(True)
        self.action_slice.setChecked(True)
        icon35 = QtGui.QIcon()
        icon35.addPixmap(QtGui.QPixmap(":/parttools/slice"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_slice.setIcon(icon35)
        self.action_slice.setObjectName("action_slice")
        self.action_path = QtWidgets.QAction(MainWindow)
        self.action_path.setCheckable(True)
        self.action_path.setChecked(True)
        icon36 = QtGui.QIcon()
        icon36.addPixmap(QtGui.QPixmap(":/parttools/path"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_path.setIcon(icon36)
        self.action_path.setObjectName("action_path")
        self.main_toolbar.addAction(self.action_global_select)
        self.main_toolbar.addAction(self.action_global_create)
        self.main_toolbar.addAction(self.action_path_break)
        self.main_toolbar.addAction(self.action_path_paint)
        self.main_toolbar.addAction(self.action_path_insertion)
        self.main_toolbar.addAction(self.action_path_skip)
        self.main_toolbar.addAction(self.action_path_add_seq)
        self.main_toolbar.addSeparator()
        self.main_toolbar.addAction(self.action_new_dnapart_honeycomb)
        self.main_toolbar.addAction(self.action_new_dnapart_square)
        self.main_toolbar.addSeparator()
        self.main_toolbar.addAction(self.action_export_staples)
        self.main_toolbar.addAction(self.action_SVG)
        self.filter_view_toolbar.addAction(self.action_inspector)
        self.filter_view_toolbar.addAction(self.action_path)
        self.filter_view_toolbar.addAction(self.action_slice)
        self.filter_view_toolbar.addAction(self.action_views_label)
        self.filter_view_toolbar.addAction(self.action_toolbar_spacer_2)
        self.filter_view_toolbar.addAction(self.action_filter_rev)
        self.filter_view_toolbar.addAction(self.action_filter_fwd)
        self.filter_view_toolbar.addAction(self.action_filter_stap)
        self.filter_view_toolbar.addAction(self.action_filter_scaf)
        self.filter_view_toolbar.addAction(self.action_toolbar_spacer_1)
        self.filter_view_toolbar.addAction(self.action_filter_xover)
        self.filter_view_toolbar.addAction(self.action_filter_endpoint)
        self.filter_view_toolbar.addAction(self.action_filter_helix)
        self.filter_view_toolbar.addAction(self.action_filters_label)
        self.menu_file.addAction(self.action_about)
        self.menu_file.addAction(self.action_preferences)
        self.menu_file.addAction(self.action_new)
        self.menu_file.addAction(self.action_open)
        self.menu_file.addSeparator()
        self.menu_file.addAction(self.action_close)
        self.menu_file.addAction(self.action_save)
        self.menu_file.addAction(self.action_save_as)
        self.menu_edit.addAction(self.action_copy)
        self.menu_edit.addAction(self.action_paste)
        self.menuView.addAction(self.action_slice)
        self.menuView.addAction(self.action_path)
        self.menuView.addAction(self.action_inspector)
        self.menubar.addAction(self.menu_file.menuAction())
        self.menubar.addAction(self.menu_edit.menuAction())
        self.menubar.addAction(self.menuView.menuAction())

        self.retranslateUi(MainWindow)
        self.action_close.triggered.connect(MainWindow.close)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "cadnano"))
        self.main_toolbar.setWindowTitle(_translate("MainWindow", "Main Toolbar"))
        self.filter_view_toolbar.setWindowTitle(_translate("MainWindow", "Filters"))
        self.menu_file.setTitle(_translate("MainWindow", "File"))
        self.menu_edit.setTitle(_translate("MainWindow", "Edit"))
        self.menuView.setTitle(_translate("MainWindow", "View"))
        self.slice_dock_widget.setWindowTitle(_translate("MainWindow", "Slice"))
        self.grid_dock_widget.setWindowTitle(_translate("MainWindow", "Grid"))
        self.path_dock_widget.setWindowTitle(_translate("MainWindow", "Path"))
        self.inspector_dock_widget.setWindowTitle(_translate("MainWindow", "Inspector"))
        self.action_new.setText(_translate("MainWindow", "New..."))
        self.action_new.setShortcut(_translate("MainWindow", "Ctrl+N"))
        self.action_open.setText(_translate("MainWindow", "Open..."))
        self.action_open.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.action_close.setText(_translate("MainWindow", "Close"))
        self.action_close.setShortcut(_translate("MainWindow", "Ctrl+W"))
        self.action_save.setText(_translate("MainWindow", "Save"))
        self.action_save.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.action_save_as.setText(_translate("MainWindow", "Save As..."))
        self.action_save_as.setShortcut(_translate("MainWindow", "Ctrl+Shift+S"))
        self.action_save_a_copy.setText(_translate("MainWindow", "Save a Copy..."))
        self.action_print.setText(_translate("MainWindow", "Print..."))
        self.action_SVG.setText(_translate("MainWindow", "SVG"))
        self.action_X3D.setText(_translate("MainWindow", "X3D"))
        self.action_cut.setText(_translate("MainWindow", "Cut"))
        self.action_cut.setShortcut(_translate("MainWindow", "Ctrl+X"))
        self.action_copy.setText(_translate("MainWindow", "Copy Part"))
        self.action_copy.setShortcut(_translate("MainWindow", "Ctrl+C"))
        self.action_paste.setText(_translate("MainWindow", "Paste"))
        self.action_paste.setShortcut(_translate("MainWindow", "Ctrl+V"))
        self.action_select_all.setText(_translate("MainWindow", "Select All"))
        self.action_select_all.setShortcut(_translate("MainWindow", "Ctrl+A"))
        self.action_new_honeycomb_part.setText(_translate("MainWindow", "Hc"))
        self.action_new_honeycomb_part.setToolTip(_translate("MainWindow", "Click to add new part with honeycomb lattice"))
        self.action_new_dna_part.setText(_translate("MainWindow", "Sq"))
        self.action_new_dna_part.setToolTip(_translate("MainWindow", "Click to add new part with square lattice"))
        self.action_path_break.setText(_translate("MainWindow", "Break"))
        self.action_path_break.setIconText(_translate("MainWindow", "Break"))
        self.action_path_break.setToolTip(_translate("MainWindow", "(B)reak Tool"))
        self.action_path_break.setShortcut(_translate("MainWindow", "B"))
        self.action_path_select.setText(_translate("MainWindow", "Select"))
        self.action_path_select.setIconText(_translate("MainWindow", "Select"))
        self.action_path_select.setToolTip(_translate("MainWindow", "Select Tool (v)"))
        self.action_path_create.setText(_translate("MainWindow", "Create"))
        self.action_path_create.setToolTip(_translate("MainWindow", "(C)reate Tool"))
        self.action_path_create.setShortcut(_translate("MainWindow", "C"))
        self.action_path_insertion.setText(_translate("MainWindow", "Insert"))
        self.action_path_insertion.setToolTip(_translate("MainWindow", "(I)nsert Tool"))
        self.action_path_insertion.setShortcut(_translate("MainWindow", "I"))
        self.action_new_square_part.setText(_translate("MainWindow", "Sq"))
        self.action_new_square_part.setToolTip(_translate("MainWindow", "Click to add new part with square lattice"))
        self.action_path_skip.setText(_translate("MainWindow", "Skip"))
        self.action_path_skip.setToolTip(_translate("MainWindow", "S(k)ip Tool"))
        self.action_path_skip.setShortcut(_translate("MainWindow", "K"))
        self.action_path_paint.setText(_translate("MainWindow", "Paint"))
        self.action_path_paint.setToolTip(_translate("MainWindow", "(P)aint Tool"))
        self.action_path_paint.setShortcut(_translate("MainWindow", "P"))
        self.action_path_add_seq.setText(_translate("MainWindow", "Seq"))
        self.action_path_add_seq.setToolTip(_translate("MainWindow", "(A)dd Sequence Tool"))
        self.action_path_add_seq.setShortcut(_translate("MainWindow", "A"))
        self.action_export_staples.setText(_translate("MainWindow", "Export"))
        self.action_export_staples.setToolTip(_translate("MainWindow", "export oligos as *.CSV"))
        self.action_preferences.setText(_translate("MainWindow", "Preferences"))
        self.action_preferences.setShortcut(_translate("MainWindow", "Ctrl+,"))
        self.action_cadnano_website.setText(_translate("MainWindow", "cadnano Website"))
        self.action_feedback.setText(_translate("MainWindow", "Feedback"))
        self.action_filter_part.setText(_translate("MainWindow", "Parts"))
        self.action_filter_part.setToolTip(_translate("MainWindow", "Part-selection mode"))
        self.action_filter_endpoint.setText(_translate("MainWindow", "Endpoints"))
        self.action_filter_endpoint.setToolTip(_translate("MainWindow", "(E)ndpoints"))
        self.action_filter_endpoint.setShortcut(_translate("MainWindow", "E"))
        self.action_filter_xover.setText(_translate("MainWindow", "(X)overs"))
        self.action_filter_xover.setToolTip(_translate("MainWindow", "(X)overs"))
        self.action_filter_xover.setShortcut(_translate("MainWindow", "X"))
        self.action_views_label.setText(_translate("MainWindow", "Views:"))
        self.action_filter_strand.setToolTip(_translate("MainWindow", "stran(D)s"))
        self.action_filter_strand.setShortcut(_translate("MainWindow", "D"))
        self.action_filter_helix.setText(_translate("MainWindow", "Helix"))
        self.action_filter_helix.setToolTip(_translate("MainWindow", "(H)elix"))
        self.action_filter_helix.setShortcut(_translate("MainWindow", "H"))
        self.action_about.setText(_translate("MainWindow", "About cadnano"))
        self.action_path_mods.setText(_translate("MainWindow", "Mod"))
        self.action_path_mods.setToolTip(_translate("MainWindow", "(M)odifer Tool"))
        self.action_path_mods.setShortcut(_translate("MainWindow", "M"))
        self.action_new_dnapart_honeycomb.setText(_translate("MainWindow", "New Honeycomb"))
        self.action_new_dnapart_honeycomb.setIconText(_translate("MainWindow", "Honeycomb"))
        self.action_new_dnapart_honeycomb.setToolTip(_translate("MainWindow", "Add Honeycomb DNAPart "))
        self.action_new_dnapart_honeycomb.setShortcut(_translate("MainWindow", "Ctrl+P"))
        self.action_new_dnapart_square.setText(_translate("MainWindow", "New Square"))
        self.action_new_dnapart_square.setIconText(_translate("MainWindow", "Square"))
        self.action_new_dnapart_square.setToolTip(_translate("MainWindow", "Add Square DNAPart "))
        self.action_inspector.setText(_translate("MainWindow", "Inspector"))
        self.action_inspector.setToolTip(_translate("MainWindow", "Toggle Inspector"))
        self.action_new_part.setText(_translate("MainWindow", "New"))
        self.action_new_part.setToolTip(_translate("MainWindow", "Add new part"))
        self.action_new_plasmidpart.setText(_translate("MainWindow", "Plasmid"))
        self.action_new_plasmidpart.setToolTip(_translate("MainWindow", "Plasmid"))
        self.action_filter_pre_axover.setText(_translate("MainWindow", "filter_pre_axover"))
        self.action_filter_pre_axover.setToolTip(_translate("MainWindow", "Antiparallel Xovers ([)"))
        self.action_filter_pre_axover.setShortcut(_translate("MainWindow", "]"))
        self.action_filter_pre_pxover.setText(_translate("MainWindow", "filter-pre-pxover"))
        self.action_filter_pre_pxover.setToolTip(_translate("MainWindow", "Parallel Xovers (\\)"))
        self.action_filter_pre_pxover.setShortcut(_translate("MainWindow", "\\"))
        self.action_vhelix_create.setText(_translate("MainWindow", "create"))
        self.action_vhelix_create.setToolTip(_translate("MainWindow", "Create Helix"))
        self.action_filter_fwd.setText(_translate("MainWindow", "filter-fwd"))
        self.action_filter_fwd.setToolTip(_translate("MainWindow", "F(w)d"))
        self.action_filter_fwd.setShortcut(_translate("MainWindow", "W"))
        self.action_filter_rev.setText(_translate("MainWindow", "filter-rev"))
        self.action_filter_rev.setToolTip(_translate("MainWindow", "(R)ev"))
        self.action_filter_rev.setShortcut(_translate("MainWindow", "R"))
        self.action_vhelix_select.setText(_translate("MainWindow", "select"))
        self.action_vhelix_select.setToolTip(_translate("MainWindow", "Select Helix"))
        self.action_vhelix_snap.setText(_translate("MainWindow", "Snap"))
        self.action_vhelix_snap.setToolTip(_translate("MainWindow", "Snap Helix"))
        self.action_global_create.setText(_translate("MainWindow", "Create"))
        self.action_global_create.setToolTip(_translate("MainWindow", "(C)reate"))
        self.action_global_create.setShortcut(_translate("MainWindow", "C"))
        self.action_global_select.setText(_translate("MainWindow", "Select"))
        self.action_global_select.setIconText(_translate("MainWindow", "Select"))
        self.action_global_select.setToolTip(_translate("MainWindow", "Select Tool (v)"))
        self.action_global_select.setShortcut(_translate("MainWindow", "V"))
        self.action_filters_label.setText(_translate("MainWindow", "Filters:"))
        self.action_filter_scaf.setText(_translate("MainWindow", "filter-scaf"))
        self.action_filter_scaf.setToolTip(_translate("MainWindow", "(S)caf"))
        self.action_filter_scaf.setShortcut(_translate("MainWindow", "S"))
        self.action_filter_stap.setText(_translate("MainWindow", "filter-stap"))
        self.action_filter_stap.setToolTip(_translate("MainWindow", "S(t)ap"))
        self.action_filter_stap.setShortcut(_translate("MainWindow", "T"))
        self.action_slice.setText(_translate("MainWindow", "Slice"))
        self.action_slice.setToolTip(_translate("MainWindow", "Toggle Slice"))
        self.action_path.setText(_translate("MainWindow", "Path"))
        self.action_path.setToolTip(_translate("MainWindow", "Toggle Path"))

from cadnano.views.customqgraphicsview import CustomQGraphicsView
from cadnano.views.outlinerview.outlinertreewidget import OutlinerTreeWidget
from cadnano.views.propertyview.propertyeditorwidget import PropertyEditorWidget
import cadnano.gui.mainwindow.icons_rc
